<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<artifactId>identity-management</artifactId>
		<groupId>org.ihtsdo.otf</groupId>
		<version>1.2.1</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<artifactId>identity-service</artifactId>
	<packaging>war</packaging>

	<name>IHTSDO Identity and SSO Service</name>

	<prerequisites>
		<maven>3.0.0</maven>
	</prerequisites>

	<properties>
		<HikariCP.version>2.2.5</HikariCP.version>
		<assertj-core.version>1.6.1</assertj-core.version>
		<awaitility.version>1.4.0</awaitility.version>
		<commons-io.version>2.4</commons-io.version>
		<commons-lang.version>2.6</commons-lang.version>
		<gatling-maven-plugin.version>2.1.2</gatling-maven-plugin.version>
		<gatling.version>2.1.4</gatling.version>
		<hibernate.version>4.3.6.Final</hibernate.version>
		<java.version>1.7</java.version>
		<javax.inject.version>1</javax.inject.version>
		<joda-time-hibernate.version>1.3</joda-time-hibernate.version>
		<json-path.version>0.9.1</json-path.version>
		<maven-enforcer-plugin.version>1.3.1</maven-enforcer-plugin.version>
		<maven-sortpom-plugin.version>2.3.0</maven-sortpom-plugin.version>
		<maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
		<metrics-spark-reporter.version>1.2</metrics-spark-reporter.version>
		<metrics-spring.version>3.0.3</metrics-spring.version>
		<run.addResources>false</run.addResources>
		<sonar-maven-plugin.version>2.3</sonar-maven-plugin.version>
		<swagger-springmvc.version>0.9.5</swagger-springmvc.version>
		<usertype-core.version>3.2.0.GA</usertype-core.version>

		<execFinalName>${project.build.finalName}.war</execFinalName>
		<packageName>${project.build.finalName}</packageName>
		<!-- <packageName>${project.parent.artifactId}-${project.artifactId}</packageName> -->


	</properties>

	<dependencies>

		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-hibernate4</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-hppc</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-joda</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-json-org</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.jayway.awaitility</groupId>
			<artifactId>awaitility</artifactId>
			<version>${awaitility.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<version>${json-path.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.mangofactory</groupId>
			<artifactId>swagger-springmvc</artifactId>
			<version>${swagger-springmvc.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>jackson-module-scala_2.10</artifactId>
					<groupId>com.fasterxml.jackson.module</groupId>
				</exclusion>
				<exclusion>
					<artifactId>scalap</artifactId>
					<groupId>org.scala-lang</groupId>
				</exclusion>
				<exclusion>
					<artifactId>scala-compiler</artifactId>
					<groupId>org.scala-lang</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>${commons-lang.version}</version>
		</dependency>
		<dependency>
			<groupId>fr.ippon.spark.metrics</groupId>
			<artifactId>metrics-spark-reporter</artifactId>
			<version>${metrics-spark-reporter.version}</version>
		</dependency>
		<dependency>
			<groupId>io.gatling.highcharts</groupId>
			<artifactId>gatling-charts-highcharts</artifactId>
			<version>${gatling.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>${javax.inject.version}</version>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertj-core.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.ihtsdo.otf</groupId>
			<artifactId>ihtsdo-crowd-bridge</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.ihtsdo.otf</groupId>
			<artifactId>ihtsdo-crowd-resources</artifactId>
			<version>${project.version}</version>
			<type>zip</type>
			<classifier>resources</classifier>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jadira.usertype</groupId>
			<artifactId>usertype.core</artifactId>
			<version>${usertype-core.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-autoconfigure</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-loader-tools</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-logging</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- Spring Cloud -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-cloudfoundry-connector</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-localconfig-connector</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-spring-service-connector</artifactId>
		</dependency>
	</dependencies>
	<build>
	<finalName>identity-service</finalName>
		<resources>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.xml</include>
				</includes>
			</resource>
			<resource>
				<filtering>false</filtering>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>**/*.xml</exclude>
				</excludes>
			</resource>
			<resource>
				<filtering>true</filtering>
				<directory>${project.build.directory}/generated-resources</directory>
			</resource>
		</resources>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings
				only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[1.0,)</versionRange>
										<goals>
											<goal>copy</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-enforcer-plugin</artifactId>
										<versionRange>[1.0,)</versionRange>
										<goals>
											<goal>enforce</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>exec-maven-plugin</artifactId>
										<versionRange>[1.2.1,)</versionRange>
										<goals>
											<goal>java</goal>
											<goal>exec</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>

		<!--  	<plugin>
				<groupId>com.google.code.sortpom</groupId>
				<artifactId>maven-sortpom-plugin</artifactId>
				<version>${maven-sortpom-plugin.version}</version>
				<executions>
					<execution>
						<phase>verify</phase>
						<goals>
							<goal>sort</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<sortProperties>true</sortProperties>
					<nrOfIndentSpace>4</nrOfIndentSpace>
					<sortDependencies>groupId,artifactId</sortDependencies>
					<sortPlugins>groupId,artifactId</sortPlugins>
					<keepBlankLines>true</keepBlankLines>
					<expandEmptyElements>false</expandEmptyElements>
				</configuration>
			</plugin> -->
			<plugin>
				<groupId>io.gatling</groupId>
				<artifactId>gatling-maven-plugin</artifactId>
				<version>${gatling-maven-plugin.version}</version>
				<configuration>
					<configFolder>src/test/gatling/conf</configFolder>
					<dataFolder>src/test/gatling/data</dataFolder>
					<resultsFolder>target/gatling/results</resultsFolder>
					<bodiesFolder>src/test/gatling/bodies</bodiesFolder>
					<simulationsFolder>src/test/gatling/simulations</simulationsFolder>
					<!-- This will force Gatling to ask which simulation to run
						 This is useful when you have multiple simulations -->
					<simulationClass>*</simulationClass>
				</configuration>
			</plugin>
		<!--	<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<id>identity-service-properties-files</id>
						<phase>test</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>src/main/assembly/assembly.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
				</executions>
			</plugin> -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.10</version>
				<executions>
					<execution>
						<id>unpack-crowd-resources</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/generated-resources</outputDirectory>
							<includeGroupIds>${project.groupId}</includeGroupIds>
							<includeArtifactIds>ihtsdo-crowd-resources</includeArtifactIds>
							<excludeArtifactIds>*</excludeArtifactIds>
							<excludeTransitive>true</excludeTransitive>
							<includeScope>provided</includeScope>
							<includes>crowd*.properties,
								application-im-common-security-config.xml,
								applicationContext-CrowdClient.xml,
								crowd-ehcache.xml
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>${maven-enforcer-plugin.version}</version>
				<executions>
					<execution>
						<id>enforce-versions</id>
						<goals>
							<goal>enforce</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<rules>
						<requireMavenVersion>
							<message>You are running an older version of Maven. JHipster requires at least Maven 3.0</message>
							<version>[3.0.0,)</version>
						</requireMavenVersion>
						<requireJavaVersion>
							<message>You are running an older version of Java. JHipster requires at least JDK ${java.version}</message>
							<version>[${java.version}.0,)</version>
						</requireJavaVersion>
					</rules>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<argLine>-XX:MaxPermSize=128m -Xmx256m -DcrowdPropertiesFileLocation=${basedir}/src/test/resources/config/</argLine>
					<!-- Force alphabetical order to have a reproducible build -->
					<runOrder>alphabetical</runOrder>
					<additionalClasspathElements>
						<additionalClasspathElement>${basedir}/src/test/resources/config</additionalClasspathElement>
					</additionalClasspathElements>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<packagingExcludes>WEB-INF/lib/tomcat-*.jar,bower_components/**,bower_components</packagingExcludes>
				</configuration>

			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>${sonar-maven-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<jvmArguments>-Djava.rmi.server.hostname=localhost -Xdebug
						-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005
					</jvmArguments>
					<arguments>
						<argument>--spring.profiles.active=dev</argument>
					</arguments>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.vafer</groupId>
				<artifactId>jdeb</artifactId>
				<version>1.1.1</version>

				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>jdeb</goal>
						</goals>
						<configuration>
							<deb>${project.build.directory}/${packageName}-${project.version}-all.deb</deb>
							<controlDir>${project.basedir}/deb/control</controlDir>
							<snapshotExpand>true</snapshotExpand>
							<snapshotEnv>BUILD_NUMBER</snapshotEnv>
							<verbose>true</verbose>
							<classifier>all</classifier>
							<signPackage>false</signPackage>
							<dataSet>
								<data>
									<src>${project.build.directory}/${execFinalName}</src>
									<dst>app.war</dst>
									<type>file</type>
									<mapper>
										<type>perm</type>
										<prefix>/opt/${packageName}/lib/</prefix>
										<user>identity-service</user>
                    								<group>identity-service</group>
									</mapper>
								</data>
								<data>
									<src>${project.basedir}/deb/supervisor.conf</src>
									<dst>/etc/supervisor/conf.d/${packageName}.conf</dst>
									<type>file</type>
									<conffile>true</conffile>
								</data>
								<data> 
								<src>${project.basedir}/deb/run.sh</src> 
								<dst>/opt/${packageName}/lib/run.sh</dst> 
									<type>file</type> 
									<mapper> 
									<type>perm</type> 
									<filemode>0740</filemode> 
   									<user>identity-service</user>
                                                                        <group>identity-service</group>
									</mapper> 
								</data>
								<data>
									<type>template</type>
									<paths>
										<path>/etc/opt/${packageName}</path>
										<path>/opt/${packageName}</path>
									</paths>
								</data>
								<data>
									<type>template</type>
									<paths>
										<path>/var/opt/${packageName}</path>
										<path>/var/opt/${packageName}/run</path>
										<path>/var/opt/${packageName}/logs</path>
									</paths>
									<mapper>
										<type>perm</type>
										<user>${packageName}</user>
										<group>${packageName}</group>
										<dirmode>0750</dirmode>
										<filemode>0750</filemode>
									</mapper>
								</data>
								<data>
									<type>link</type>
									<linkName>/var/log/${packageName}</linkName>
									<linkTarget>/var/opt/${packageName}/log</linkTarget>
									<symlink>true</symlink>
								</data>
							</dataSet>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>dev</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.trecloux</groupId>
						<artifactId>yeoman-maven-plugin</artifactId>
						<version>0.4</version>
						<executions>
							<execution>
								<id>run-frontend-build</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>build</goal>
								</goals>
								<configuration>
									<buildTool>grunt</buildTool>
									<buildArgs>devbuild --force --no-color</buildArgs>
								</configuration>
							</execution>
						</executions>
						<configuration>
							<yeomanProjectDirectory>${project.basedir}</yeomanProjectDirectory>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<properties>
				<!-- log configuration -->
				<logback.loglevel>INFO</logback.loglevel>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
					<scope>provided</scope>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<id>prod</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.trecloux</groupId>
						<artifactId>yeoman-maven-plugin</artifactId>
						<version>0.4</version>
						<executions>
							<execution>
								<id>run-frontend-build</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>build</goal>
								</goals>
								<configuration>
									<buildTool>grunt</buildTool>
									<buildArgs>build --force --no-color</buildArgs>
								</configuration>
							</execution>
						</executions>
						<configuration>
							<yeomanProjectDirectory>${project.basedir}</yeomanProjectDirectory>
						</configuration>
					</plugin>
					<plugin>
						<artifactId>maven-clean-plugin</artifactId>
						<version>2.5</version>
						<configuration>
							<filesets>
								<fileset>
									<directory>src/main/webapp/dist</directory>
								</fileset>
								<fileset>
									<directory>.tmp</directory>
								</fileset>
								<fileset>
									<directory>node_modules</directory>
								</fileset>
							</filesets>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<arguments>
								<argument>--spring.profiles.active=prod</argument>
							</arguments>
						</configuration>
					</plugin>

				</plugins>
			</build>
			<properties>
				<!-- log configuration -->
				<logback.loglevel>INFO</logback.loglevel>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
					<scope>provided</scope>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>uat</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.trecloux</groupId>
						<artifactId>yeoman-maven-plugin</artifactId>
						<version>0.4</version>
						<executions>
							<execution>
								<id>run-frontend-build</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>build</goal>
								</goals>
								<configuration>
									<buildTool>grunt</buildTool>
									<buildArgs>uatbuild --force --no-color</buildArgs>
								</configuration>
							</execution>
						</executions>
						<configuration>
							<yeomanProjectDirectory>${project.basedir}</yeomanProjectDirectory>
						</configuration>
					</plugin>
					<plugin>
						<artifactId>maven-clean-plugin</artifactId>
						<version>2.5</version>
						<configuration>
							<filesets>
								<fileset>
									<directory>src/main/webapp/dist</directory>
								</fileset>
								<fileset>
									<directory>.tmp</directory>
								</fileset>
								<fileset>
									<directory>node_modules</directory>
								</fileset>
							</filesets>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<arguments>
								<argument>--spring.profiles.active=uat</argument>
							</arguments>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<properties>
				<!-- log configuration -->
				<logback.loglevel>INFO</logback.loglevel>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
					<scope>provided</scope>
				</dependency>
			</dependencies>
		</profile>
	</profiles>
</project>
